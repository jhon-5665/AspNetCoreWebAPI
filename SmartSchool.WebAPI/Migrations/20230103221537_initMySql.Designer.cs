// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.WebAPI.Data;

#nullable disable

namespace SmartSchool.WebAPI.Migrations
{
    [DbContext(typeof(SmartContext))]
    [Migration("20230103221537_initMySql")]
    partial class initMySql
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Information Systems"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Computer Science"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PrerequisiteId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Workload")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PrerequisiteId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Disciplines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Math",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 3,
                            Name = "Math",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Name = "Physics",
                            TeacherId = 2,
                            Workload = 0
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            Name = "Portuguese",
                            TeacherId = 3,
                            Workload = 0
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 1,
                            Name = "English",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 2,
                            Name = "English",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            Name = "English",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 1,
                            Name = "Programing",
                            TeacherId = 5,
                            Workload = 0
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 2,
                            Name = "Programing",
                            TeacherId = 5,
                            Workload = 0
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 3,
                            Name = "Programing",
                            TeacherId = 5,
                            Workload = 0
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Registration")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            BirthDate = new DateTime(2005, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Marta",
                            Registration = 1,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3586),
                            Surname = "Kent",
                            Telephone = "33225555"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            BirthDate = new DateTime(2005, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paula",
                            Registration = 2,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3601),
                            Surname = "Isabela",
                            Telephone = "3354288"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            BirthDate = new DateTime(2005, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laura",
                            Registration = 3,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3609),
                            Surname = "Antonia",
                            Telephone = "55668899"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            BirthDate = new DateTime(2005, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Luiza",
                            Registration = 4,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3615),
                            Surname = "Maria",
                            Telephone = "6565659"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            BirthDate = new DateTime(2005, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lucas",
                            Registration = 5,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3623),
                            Surname = "Machado",
                            Telephone = "565685415"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            BirthDate = new DateTime(2005, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pedro",
                            Registration = 6,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3631),
                            Surname = "Alvares",
                            Telephone = "456454545"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            BirthDate = new DateTime(2005, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paulo",
                            Registration = 7,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3639),
                            Surname = "José",
                            Telephone = "9874512"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Note")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentsCourses");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.StudentDiscipline", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Note")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "DisciplineId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("StudentsDisciplines");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 2,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3668)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 4,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3672)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 5,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3673)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 1,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3674)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 2,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3686)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 5,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3688)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 1,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3689)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 2,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3690)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 3,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3691)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 1,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3693)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 4,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3695)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 5,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3696)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 4,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3697)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 5,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3698)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 1,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3699)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 2,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3700)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 3,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3701)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 4,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3703)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 1,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3705)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 2,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3706)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 3,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3707)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 4,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3708)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 5,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3709)
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Record")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Name = "Lauro",
                            Record = 1,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3344),
                            Surname = "Oliveira",
                            Telephone = ""
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Name = "Roberto",
                            Record = 2,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3363),
                            Surname = "Soares",
                            Telephone = ""
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Name = "Ronaldo",
                            Record = 3,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3365),
                            Surname = "Marconi",
                            Telephone = ""
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Name = "Rodrigo",
                            Record = 4,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3367),
                            Surname = "Carvalho",
                            Telephone = ""
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Name = "Alexandre",
                            Record = 5,
                            StartDate = new DateTime(2023, 1, 3, 19, 15, 37, 89, DateTimeKind.Local).AddTicks(3368),
                            Surname = "Montanha",
                            Telephone = ""
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Discipline", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Course", "Course")
                        .WithMany("Disciplines")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Discipline", "Prerequisite")
                        .WithMany()
                        .HasForeignKey("PrerequisiteId");

                    b.HasOne("SmartSchool.WebAPI.Models.Teacher", "Teacher")
                        .WithMany("Disciplines")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Prerequisite");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.StudentCourse", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.StudentDiscipline", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Discipline", "Discipline")
                        .WithMany("StudentsDisciplines")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Student", "Student")
                        .WithMany("StudentsDisciplines")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Course", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Discipline", b =>
                {
                    b.Navigation("StudentsDisciplines");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Student", b =>
                {
                    b.Navigation("StudentsDisciplines");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Teacher", b =>
                {
                    b.Navigation("Disciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
